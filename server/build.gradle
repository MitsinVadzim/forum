buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        springfoxSwaggerVersion = "2.9.2"
        guavaVersion = "27.0-jre"
        lombokVersion = "1.18.4"
        problemVersion = "0.24.0-RC.0"
        twilioVersion = "7.29.0"
        authyVersion = "1.5.0"
        tikaCoreVersion = "1.3.2"
        commonsIOVersion = "1.3.2"
        libPhoneNumberVersion = "8.10.1"
        hibernateTypes52Version = "2.4.0"
        hibernateSpatialVersion = "5.3.7.Final"
        jjwtVersion = "0.10.5"
        timeShapeVersion = "2018d.6"
        awsSdkVersion = "1.11.473"
        sqsMessagingVersion = "1.0.0"
        androidPublisherVersion = "v3-rev80-1.25.0"
        javafakerVersion = "0.16"
        testcontainersVersion = "1.10.4"

        basePackage = "com.vadim.server"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.vadim.server'
version = '0.1'
sourceCompatibility = 11
targetCompatibility = 11

assert System.properties["java.specification.version"] == "11"

repositories {
    mavenCentral()
}

apply from: "gradle/swagger.gradle"

dependencies {
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.boot:spring-boot-starter-mustache")
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("com.vladmihalcea:hibernate-types-52:${hibernateTypes52Version}")
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}") {
        exclude module: "springfox-spring-web"
    }
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.springframework:spring-jms'

    compile group: 'com.authy', name: 'authy-java', version: "${authyVersion}"
    compile group: "com.twilio.sdk", name: "twilio", version: "${twilioVersion}"
    compile "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtime "io.jsonwebtoken:jjwt-impl:${jjwtVersion}",
            "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    compile group: 'org.hibernate', name: 'hibernate-spatial', version: "${hibernateSpatialVersion}"
    implementation('org.postgresql:postgresql')
    implementation('org.flywaydb:flyway-core')

    implementation "org.zalando:problem-spring-web:${problemVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation("org.yaml:snakeyaml")

    compile group: 'net.iakovlev', name: 'timeshape', version: "${timeShapeVersion}"

    compile group: 'com.google.apis', name: 'google-api-services-androidpublisher', version: "${androidPublisherVersion}"
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: "${awsSdkVersion}"
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: "${awsSdkVersion}"
    compile group: 'com.amazonaws', name: 'amazon-sqs-java-messaging-lib', version: "${sqsMessagingVersion}"
    compile group: 'com.googlecode.libphonenumber', name: 'libphonenumber', version: "${libPhoneNumberVersion}"
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.19.1'
    compile group: 'org.apache.commons', name: 'commons-io', version: "${commonsIOVersion}"
    compile "org.apache.commons:commons-lang3"

    testImplementation "com.github.javafaker:javafaker:${javafakerVersion}"
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
}
